name: python CI/CD setup

on:
  push:
   branches:
    - main
jobs:
  build_test_deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: setup python
      uses: action/setup-python@v3
      with:
        python-version: '3.10'
      
    - name: Install Dependencies
      run: pip install -r requirements.txt

    - name: Run tests
      run: python test_app.py

    - name: Build Docker Image
      run: docker build -t my-flask-app:latest .

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4.3.1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Tag Docker image for ECR
      run: |
        IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/my-app:latest
        docker tag my-app:latest $IMAGE_URI

    - name: Push image to ECR
      run: |
        IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/my-app:latest
        docker push $IMAGE_URI

    - name: Deploy to EC2 
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker pull $IMAGE_URI
          docker stop my-flask-app || true
          docker rm my-flask-app || true
          docker run -d -p 80:8080 --name my-flask-app $IMAGE_URI